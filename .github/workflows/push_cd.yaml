name: Push Continuous Delivery

on:
#   especificando para rodar o workflow quando for realizado um push no repositório
    push:
        branches: main
env:
    IMAGE_NAME: xpto 
    AZURE_WEBAPP_NAME: xpto
jobs:
    build:
#   Definindo em qual máquina virtual o processo irá rodar
        runs-on: ubuntu-latest
        steps:             
#   (clona) o repositório do GitHub para o $GITHUB_WORKSPACE, permitindo que seu fluxo de trabalho acesse e trabalhe com o código        
        -   name: Git Checkout 
            uses: actions/checkout@v4 
#   
        -   name: Setup Java SDK 
            uses: actions/setup-java@v4 
            with: 
              distribution: 'temurin'  
              java-version: '21'
# Realiza o login no Docker Hub
        -   name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}

        -   name: Build 
            uses: docker/build-push-action@v6 
            with: 
                push: true
                tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest



#   Realiza os testes unitários no arquivo principal do código
        -   name: Unit Tests
            run: |
                cd greenway-main
                mvn clean verify
    deploy:
         runs-on: ubuntu-latest
         needs: build
         steps:
         -  
             name: Deploy to Azure Web App
             id: deploy-to-webapp
             uses: azure/webapps-deploy@v2
             with:
                 app-name: ${{ env.AZURE_WEBAPP_NAME }}
                 publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
                 images: 'ghcr.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest'